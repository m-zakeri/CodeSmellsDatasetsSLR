Title
exploring the relation between co-changes and architectural smells
predicting code smells and analysis of predictions: using machine learning techniques and software metrics
code smell detection using multi-label classification approach
a systematic literature review on empirical analysis of the relationship between code smells and software quality attributes
an empirical investigation on the relationship between design and architecture smells
the ‘as code’ activities: development anti-patterns for infrastructure as code
"design principles, architectural smells and refactorings for microservices: a multivocal review"
exploiting bad-smells and object-oriented characteristics to prioritize classes for refactoring
sp-j48: a novel optimization and machine-learning-based approach for solving complex problems: special application in software engineering for detecting code smells
bad smell detection using machine learning techniques: a systematic literature review
recovering android bad smells from android applications
studying the evolution of exception handling anti-patterns in a long-lived large-scale project
improving change prediction models with code smell-related information
an empirical catalog of code smells for the presentation layer of android apps
retracted article: the smell of fear: on the relation between test smells and flaky tests
security code smells in android icc
software design smell detection: a systematic mapping study
a large-scale empirical study of code smells in javascript projects
code smells for model-view-controller architectures
"model development guidelines for uml-rt: conventions, patterns and antipatterns"
on the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation
a metamodeling approach for the identification of organizational smells in multi-agent systems: application to aspecs
anti-patterns in agile adoption: a grounded theory case study of one irish it organisation
analysis of code smell to quantify the refactoring
on the evaluation of code smells and detection tools
investigating the relation between lexical smells and change- and fault-proneness: an empirical study
multi-objective code-smells detection using good and bad design examples
a lightweight approach for detection of code smells
an approach to prioritize code smells for refactoring
modelling and measuring code smells in enterprise applications using tism and two-way assessment
comparing and experimenting machine learning techniques for code smell detection
evaluating the impact of design pattern and anti-pattern dependencies on changes and faults
using model transformation to refactor use case models based on antipatterns
linguistic antipatterns: what they are and how developers perceive them
are test smells really harmful? an empirical study
prioritizing code-smells correction tasks using chemical reaction optimization
detecting and refactoring code smells in spreadsheet formulas
assessing the capability of code smells to explain maintenance problems: an empirical study combining quantitative and qualitative data
investigating the evolution of code smells in object-oriented systems
an approach for modeling and detecting software performance antipatterns based on first-order logics
what you like in design use to correct bad-smells
clones: what is that smell?
an exploratory study of the impact of antipatterns on class change- and fault-proneness
from a domain analysis to the specification and detection of code and design smells
improving the quality of use case models using antipatterns
subjective evaluation of software evolvability using code smells: an empirical study
